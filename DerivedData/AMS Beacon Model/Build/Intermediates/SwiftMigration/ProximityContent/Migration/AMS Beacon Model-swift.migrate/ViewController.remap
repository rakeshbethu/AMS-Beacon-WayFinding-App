[
 {
  "file": "/Users/rakeshbethu/Documents/iOS-SDK-master/Examples/swift/ProximityContent/ProximityContent/ViewController.swift",
  "offset": 4718,
  "remove": 25847,
  "text": ", terminator: \"\")\n        tableView.delegate = self\n        tableView.dataSource = self\n        tableViewB.delegate = self\n        tableViewB.delegate = self\n        \n        // CL\n        locationManager.delegate = self\n        if (CLLocationManager.authorizationStatus() != CLAuthorizationStatus.AuthorizedWhenInUse){\n        locationManager.requestWhenInUseAuthorization()\n        }\n        locationManager.startRangingBeaconsInRegion(region)\n        \n        \n        \n        self.activityIndicator.startAnimating()\n\n        self.proximityContentManager = ProximityContentManager(\n            beaconIDs: [\n//                BeaconID(UUIDString: \"B9407F30-F5F8-466E-AFF9-25556B57FE6D\", major: 2016, minor: 2001), //lemon 2\n//                BeaconID(UUIDString: \"B9407F30-F5F8-466E-AFF9-25556B57FE6D\", major: 2016, minor: 3001), //pink\n//                BeaconID(UUIDString: \"B9407F30-F5F8-466E-AFF9-25556B57FE6D\", major: 2016, minor: 1001),  //brown\n//                BeaconID(UUIDString: \"B9407F30-F5F8-466E-AFF9-25556B57FE6D\", major: 2016, minor: 12703), //lemon 1\n//                BeaconID(UUIDString: \"B9407F30-F5F8-466E-AFF9-25556B57FE6D\", major: 2016, minor: 37700), //Candy 2\n//                BeaconID(UUIDString: \"B9407F30-F5F8-466E-AFF9-25556B57FE6D\", major: 2016, minor: 24254),//blue\n//                BeaconID(UUIDString: \"B9407F30-F5F8-466E-AFF9-25556B57FE6D\", major: 2016, minor: 55670)//mint\n            ],\n            beaconContentFactory: CachingContentFactory(beaconContentFactory: BeaconDetailsCloudFactory()))\n        self.proximityContentManager.delegate = self\n        self.proximityContentManager.startContentUpdates()\n    }\n    \n    func proximityContentManager(proximityContentManager: ProximityContentManager, didUpdateContent content: AnyObject?) {\n        self.activityIndicator?.stopAnimating()\n        self.activityIndicator?.removeFromSuperview()\n        \n        if let beaconDetails = content as? BeaconDetails {\n            self.view.backgroundColor = beaconDetails.backgroundColor\n            self.label.text = \"You're near \\(beaconAssign[beaconDetails.beaconName]! as String)!\"\n            FromSite = (beaconAssign[beaconDetails.beaconName]! as String)\n            \n        } else {\n            self.view.backgroundColor = BeaconDetails.neutralColor\n            self.label.text = \"No beacons in range.\"\n            PathOne.hidden = true\n            PathTwo.hidden = true\n            FromSite = \"Workspace A\"\n        }\n    }\n    \n    \n    //LocationManager\n    func locationManager(manager: CLLocationManager, didRangeBeacons beacons: [CLBeacon], inRegion region: CLBeaconRegion) {\n        let knownBeacons = beacons.filter{$0.proximity != .Unknown}\n        if knownBeacons.count>0{\n            let closestBeacon = knownBeacons[0] as CLBeacon\n            print(\"\\(closestBeacon.major)     \\(closestBeacon.minor)\", terminator: \"\")\n            self.activityIndicator?.stopAnimating()\n            self.activityIndicator?.removeFromSuperview()\n            \n               // self.view.backgroundColor = beaconDetails.backgroundColor\n                self.label.text = \"You're near \\(closestbeaconAssign[closestBeacon.minor]! as String)!\"\n                FromSite = (closestbeaconAssign[closestBeacon.minor]! as String)\n           \n        }else {\n            self.view.backgroundColor = BeaconDetails.neutralColor\n            self.label.text = \"No beacons in range.\"\n            PathOne.hidden = true\n            PathTwo.hidden = true\n            FromSite = \"Workspace A\"\n        }\n    }\n    \n    \n    func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        \n        if tableView.tag == 1{\n        //print(list.count)\n            numberOfBuildings = Buildings.count\n            return numberOfBuildings\n        }else if tableView.tag == 2{\n            \n            if BuildingReference ==  \"AMS Suite 201\" {\n                numberOfSites = list.count\n            }else if BuildingReference ==  \"Pencil Works\" {\n                numberOfSites = pencilworksSpaces.count\n            }\n            return numberOfSites\n        }else{\n            return 0\n        }\n        \n    }\n    \n    \n    func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {\n        \n        let cell = tableView.dequeueReusableCellWithIdentifier(cellIdentifier, forIndexPath: indexPath) as UITableViewCell\n        \n        if tableView.tag == 1 {\n            cell.textLabel?.text = Buildings[indexPath.row]\n        }else if tableView.tag == 2 {\n            if BuildingReference ==  \"AMS Suite 201\" {\n                cell.textLabel?.text = list[indexPath.row]\n            }else if BuildingReference ==  \"Pencil Works\" {\n                cell.textLabel?.text = pencilworksSpaces[indexPath.row]\n            }\n        }\n        return cell\n    }\n    \n    func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {\n       \n        \n        if tableView.tag == 1{\n             let cell = self.tableViewB.cellForRowAtIndexPath(indexPath)\n        BuildingReference = (cell?.textLabel?.text)!\n        self.BuildingBtn.setTitle(cell?.textLabel?.text, forState: UIControlState.Normal)\n        tableViewB.hidden = true\n            btnOutlet.titleLabel?.text = (\"Select\")\n            \n//            btnOutlet.titleLabel?.font\n             self.tableView.reloadData()\n        }\n        \n        //tableView.reloadData()\n        else if tableView.tag == 2{\n//            print(<#T##items: Any...##Any#>)\n             let cell = self.tableView.cellForRowAtIndexPath(indexPath)\n            //BuildingReference = Buildings[indexPath.row]\n            self.btnOutlet.setTitle(cell?.textLabel?.text, forState: UIControlState.Normal)\n            tableView.hidden = true\n        }\n        \n        \n       \n        \n//          if tableView.tag == 2{\n        \n            \n            \n            \n//        let cell = self.tableView.cellForRowAtIndexPath(indexPath)\n//        self.btnOutlet.setTitle(cell?.textLabel?.text, forState: UIControlState.Normal)\n//        tableView.hidden = true\n//          }\n//          else{\n//            let cell = self.tableView.cellForRowAtIndexPath(indexPath)\n//            self.BuildingBtn.setTitle(cell?.textLabel?.text, forState: UIControlState.Normal)\n//            tableViewB.hidden = true\n//        }\n    }\n    \n    \n    @IBAction func btnAction(sender: UIButton) {\n        tableView.hidden = false\n        tableViewB.hidden = true\n        btnOutlet.titleLabel?.text = (\"Select\")\n       \n    }\n    @IBAction func BuildingBtnAction(sender: UIButton) {\n        tableViewB.hidden = false\n        tableView.hidden = true\n        \n    }\n    \n    @IBAction func SubmitButton(sender: UIButton) {\n        A01Item = AVPlayerItem(URL:NSURL(fileURLWithPath: PathSet[0]))\n        A02Item = AVPlayerItem(URL:NSURL(fileURLWithPath: PathSet[1]))\n        B01Item = AVPlayerItem(URL:NSURL(fileURLWithPath: PathSet[2]))\n        B02Item = AVPlayerItem(URL:NSURL(fileURLWithPath: PathSet[3]))\n        C01Item = AVPlayerItem(URL:NSURL(fileURLWithPath: PathSet[4]))\n        C02Item = AVPlayerItem(URL:NSURL(fileURLWithPath: PathSet[5]))\n        C03Item = AVPlayerItem(URL:NSURL(fileURLWithPath: PathSet[6]))\n        D01Item = AVPlayerItem(URL:NSURL(fileURLWithPath: PathSet[7]))\n        D02Item = AVPlayerItem(URL:NSURL(fileURLWithPath: PathSet[8]))\n        N01Item = AVPlayerItem(URL:NSURL(fileURLWithPath: PathSet[9]))\n        MT01Item = AVPlayerItem(URL:NSURL(fileURLWithPath: MatterportSites[0]))\n        MT02Item = AVPlayerItem(URL:NSURL(fileURLWithPath: MatterportSites[1]))\n        MT03Item = AVPlayerItem(URL:NSURL(fileURLWithPath: MatterportSites[2]))\n        \n        B2Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[3]))\n        \n       \n        //print(FromSite+\"  to  \"+(btnOutlet.titleLabel?.text)!)\n        \n       self.toSite = (btnOutlet.titleLabel?.text)!\n        \n        // 1\n        if FromSite == \"Workspace A\" {\n            if list.contains(toSite){\n            if toSite == \"Workspace B\"\n            {\n                AVQueueItem = AVQueuePlayer(items: [A01Item!])\n            }else if  toSite == \"Restroom\"{\n            AVQueueItem = AVQueuePlayer(items: [A01Item!,B01Item!])\n            }else if  toSite == \"Network Room\"{\n                AVQueueItem = AVQueuePlayer(items: [A01Item!,B01Item!,N01Item!])\n            }else if  toSite == \"Dan Room\"{\n                AVQueueItem = AVQueuePlayer(items: [A01Item!,B01Item!,C01Item!,C02Item!])\n            }else if  toSite == \"Sector G3\"{\n                AVQueueItem = AVQueuePlayer(items: [A01Item!,B01Item!,C01Item!,D01Item!])\n            }\n            playEvent(AVQueueItem)\n            }else{\n                if toSite == \"Canteen\"{\n                    AVQueueItem = AVQueuePlayer(items: [A02Item!])\n                    playEventTwo(AVQueueItem)\n                }else if toSite == \"Lobby\"{\n                    AVQueueItem = AVQueuePlayer(items: [A02Item!])\n                    playEventTwo(AVQueueItem)\n                }else{\n                    let alert3 = UIAlertController(title: \"Not Found\", message:\"Path to this space has not been added, Please select other.\", preferredStyle: .Alert)\n                    alert3.addAction(UIAlertAction(title: \"Close\", style: .Default) { (UIAlertAction) -> Void in self})\n                    self.presentViewController(alert3, animated: true){}\n                }\n            }\n        }// 2\n        else if FromSite == \"Workspace B\" {\n            if list.contains(toSite){\n            if toSite == \"Workspace A\"\n            {\n                AVQueueItem = AVQueuePlayer(items: [A02Item!])\n            }else if  toSite == \"Restroom\"{\n                AVQueueItem = AVQueuePlayer(items: [B01Item!])\n            }else if  toSite == \"Network Room\"{\n                AVQueueItem = AVQueuePlayer(items: [B01Item!,N01Item!])\n            }else if  toSite == \"Dan Room\"{\n                AVQueueItem = AVQueuePlayer(items: [B01Item!,C01Item!,C02Item!])\n            }else if  toSite == \"Sector G3\"{\n                AVQueueItem = AVQueuePlayer(items: [B01Item!,C01Item!,D01Item!])\n            }\n            playEvent(AVQueueItem)\n        }else{\n            if toSite == \"Canteen\"{\n                AVQueueItem = AVQueuePlayer(items: [A02Item!])\n                playEventTwo(AVQueueItem)\n            }else if toSite == \"Lobby\"{\n                AVQueueItem = AVQueuePlayer(items: [A02Item!])\n                playEventTwo(AVQueueItem)\n            }else{\n                let alert3 = UIAlertController(title: \"Not Found\", message:\"Path to this space has not been added, Please select other.\", preferredStyle: .Alert)\n                alert3.addAction(UIAlertAction(title: \"Close\", style: .Default) { (UIAlertAction) -> Void in self})\n                self.presentViewController(alert3, animated: true){}\n                }\n        }// 3\n        }else if FromSite == \"Restroom\" {\n            if list.contains(toSite){\n            if toSite == \"Workspace A\"\n            {\n                AVQueueItem = AVQueuePlayer(items: [B02Item!,A02Item!])\n            }else if  toSite == \"Workspace B\"{\n                AVQueueItem = AVQueuePlayer(items: [B02Item!])\n            }else if  toSite == \"Network Room\"{\n                AVQueueItem = AVQueuePlayer(items: [N01Item!])\n            }else if  toSite == \"Dan Room\"{\n                AVQueueItem = AVQueuePlayer(items: [C01Item!,C02Item!])\n            }else if  toSite == \"Sector G3\"{\n                AVQueueItem = AVQueuePlayer(items: [C01Item!,D01Item!])\n            }\n            playEvent(AVQueueItem)\n            }else{\n                 if toSite == \"Canteen\"{\n                    AVQueueItem = AVQueuePlayer(items: [B02Item!,A02Item!])\n                    playEventTwo(AVQueueItem)\n                }else if toSite == \"Lobby\"{\n                    AVQueueItem = AVQueuePlayer(items: [B02Item!,A02Item!])\n                    playEventTwo(AVQueueItem)\n                 }else{\n                    let alert3 = UIAlertController(title: \"Not Found\", message:\"Path to this space has not been added, Please select other.\", preferredStyle: .Alert)\n                    alert3.addAction(UIAlertAction(title: \"Close\", style: .Default) { (UIAlertAction) -> Void in self})\n                    self.presentViewController(alert3, animated: true){}\n                }\n            } // 4\n        }else if FromSite == \"Network Room\" {\n            if list.contains(toSite){\n            if toSite == \"Workspace A\"\n            {\n                AVQueueItem = AVQueuePlayer(items: [B02Item!,A02Item!])\n            }else if  toSite == \"Workspace B\"{\n                AVQueueItem = AVQueuePlayer(items: [B02Item!])\n            }else if  toSite == \"Restroom\"{\n                AVQueueItem = AVQueuePlayer(items: [B02Item!])\n            }else if  toSite == \"Dan Room\"{\n                AVQueueItem = AVQueuePlayer(items: [C02Item!])\n            }else if  toSite == \"Sector G3\"{\n                AVQueueItem = AVQueuePlayer(items: [C01Item!,D01Item!])\n            } \n            playEvent(AVQueueItem)\n        }else{\n            if toSite == \"Canteen\"{\n                AVQueueItem = AVQueuePlayer(items: [B02Item!,A02Item!])\n                playEventTwo(AVQueueItem)\n            }else if toSite == \"Lobby\"{\n                AVQueueItem = AVQueuePlayer(items: [B02Item!,A02Item!])\n                playEventTwo(AVQueueItem)\n            }else{\n                let alert3 = UIAlertController(title: \"Not Found\", message:\"Path to this space has not been added, Please select other.\", preferredStyle: .Alert)\n                alert3.addAction(UIAlertAction(title: \"Close\", style: .Default) { (UIAlertAction) -> Void in self})\n                self.presentViewController(alert3, animated: true){}\n                }\n        }\n        // 5\n        }else if FromSite == \"Dan Room\" {\n            if list.contains(toSite){\n            if toSite == \"Workspace A\"\n            {\n                AVQueueItem = AVQueuePlayer(items: [B2Item!,B02Item!,A02Item!])\n            }else if  toSite == \"Workspace B\"{\n                AVQueueItem = AVQueuePlayer(items: [B2Item!,B02Item!])\n            }else if  toSite == \"Restroom\"{\n                AVQueueItem = AVQueuePlayer(items: [B2Item!,B02Item!])\n            }else if  toSite == \"Network Room\"{\n                AVQueueItem = AVQueuePlayer(items: [B2Item!])\n            }else if  toSite == \"Sector G3\"{\n                AVQueueItem = AVQueuePlayer(items: [C03Item!,D01Item!])\n            }\n                playEvent(AVQueueItem) }else{\n                if toSite == \"Canteen\"{\n                    AVQueueItem = AVQueuePlayer(items: [B2Item!,B02Item!,A02Item!])\n                    playEventTwo(AVQueueItem)\n                }else if toSite == \"Lobby\"{\n                    AVQueueItem = AVQueuePlayer(items: [B2Item!,B02Item!,A02Item!])\n                    playEventTwo(AVQueueItem)\n                }else{\n                    let alert3 = UIAlertController(title: \"Not Found\", message:\"Path to this space has not been added, Please select other.\", preferredStyle: .Alert)\n                    alert3.addAction(UIAlertAction(title: \"Close\", style: .Default) { (UIAlertAction) -> Void in self})\n                    self.presentViewController(alert3, animated: true){}\n                }\n            } // 6\n        }else if FromSite == \"Sector G3\" {\n            if toSite == \"Workspace A\"\n            {\n                AVQueueItem = AVQueuePlayer(items: [D02Item!,B02Item!,A02Item!])\n                playEvent(AVQueueItem)\n            }else if  toSite == \"Workspace B\"{\n                AVQueueItem = AVQueuePlayer(items: [D02Item!,B02Item!])\n                playEvent(AVQueueItem)\n            }else if  toSite == \"Restroom\"{\n                AVQueueItem = AVQueuePlayer(items: [D02Item!,B02Item!])\n                playEvent(AVQueueItem)\n            }else if  toSite == \"Network Room\"{\n                AVQueueItem = AVQueuePlayer(items: [D02Item!])\n                playEvent(AVQueueItem)\n            }else if  toSite == \"Dan Room\"{\n                AVQueueItem = AVQueuePlayer(items: [D02Item!,C02Item!])\n                playEvent(AVQueueItem)\n            }else if toSite == \"Canteen\"{\n                AVQueueItem = AVQueuePlayer(items: [D02Item!,B02Item!,A02Item!])\n                playEventTwo(AVQueueItem)\n            }else if toSite == \"Lobby\"{\n                AVQueueItem = AVQueuePlayer(items: [D02Item!,B02Item!,A02Item!])\n                playEventTwo(AVQueueItem)\n            }else{\n                let alert3 = UIAlertController(title: \"Not Found\", message:\"Path to this space has not been added, Please select other.\", preferredStyle: .Alert)\n                alert3.addAction(UIAlertAction(title: \"Close\", style: .Default) { (UIAlertAction) -> Void in self})\n                self.presentViewController(alert3, animated: true){}\n            }\n           \n        } else if FromSite == \"PencilWorks - Canteen\"{\n            if list.contains(toSite){\n                if toSite == \"Workspace B\"\n                {\n                    AVQueueItem = AVQueuePlayer(items: [MT03Item!])\n                }else if  toSite == \"Restroom\"{\n                    AVQueueItem = AVQueuePlayer(items: [MT03Item!])\n                }else if  toSite == \"Network Room\"{\n                    AVQueueItem = AVQueuePlayer(items: [MT03Item!])\n                }else if  toSite == \"Dan Room\"{\n                    AVQueueItem = AVQueuePlayer(items: [MT03Item!])\n                }else if  toSite == \"Sector G3\"{\n                    AVQueueItem = AVQueuePlayer(items: [MT03Item!])\n                }\n                playEventTwo(AVQueueItem)\n            }else{\n                    let alert3 = UIAlertController(title: \"Not Found\", message:\"Path to this space has not been added, Please select other.\", preferredStyle: .Alert)\n                    alert3.addAction(UIAlertAction(title: \"Close\", style: .Default) { (UIAlertAction) -> Void in self})\n                    self.presentViewController(alert3, animated: true){}\n                }\n            \n        }\n        \n        \n       \n        \n        \n    }\n    func playEvent(QueueItem: AVQueuePlayer){\n        playerView = QueueItem\n        playerViewController.player = playerView\n        self.presentViewController(playerViewController, animated: true) {\n            self.playerViewController.player?.play()\n        }\n        \n        \n        \n        NSNotificationCenter.defaultCenter().addObserver(self, selector: #selector(ViewController.playerDidFinishPlaying(_:)), name: AVPlayerItemDidPlayToEndTimeNotification, object: self.playerView.items().last)\n    }\n    \n    func playEventTwo(QueueItem: AVQueuePlayer){\n        playerView = QueueItem\n        playerViewController.player = playerView\n        self.presentViewController(playerViewController, animated: true) {\n            self.playerViewController.player?.play()\n        }\n        \n        NSNotificationCenter.defaultCenter().addObserver(self, selector: #selector(ViewController.playerDidFinishPlayingTwo(_:)), name: AVPlayerItemDidPlayToEndTimeNotification, object: self.playerView.items().last)\n        \n    }\n    func playerDidFinishPlayingTwo(note: NSNotification){\n        print(\"Video Finished\", terminator: \"\")\n        self.playerViewController.dismissViewControllerAnimated(true, completion: nil)\n        let alert3 = UIAlertController(title: \"Alert\", message:\"You arrived to the exit in this building, Please click 'Continue' to view path towards \\(self.toSite) in next building.\", preferredStyle: .Alert)\n        alert3.addAction(UIAlertAction(title: \"Continue\", style: .Default) {\n            (UIAlertAction) -> Void in\n            print(\"Alert Called \" + self.FromSite, terminator: \"\" )\n            if self.list.contains(self.FromSite){\n            self.MT01Item = AVPlayerItem(URL:NSURL(fileURLWithPath: self.MatterportSites[0]))\n            self.MT02Item = AVPlayerItem(URL:NSURL(fileURLWithPath: self.MatterportSites[1]))\n            if (self.toSite == \"Canteen\"){\n            self.AVQueueItem = AVQueuePlayer(items: [self.MT01Item!])\n            }else if (self.toSite == \"Lobby\"){\n                self.AVQueueItem = AVQueuePlayer(items: [self.MT02Item!])\n            }\n            self.playEvent(self.AVQueueItem)\n            \n            \n            print(\"call success\")\n            } else if self.FromSite == \"PencilWorks - Canteen\"{\n                print(self.FromSite)\n                \n                if self.toSite == \"Workspace B\"\n                {\n                    self.AVQueueItem = AVQueuePlayer(items: [self.A01Item!])\n                }else if  self.toSite == \"Restroom\"{\n                    self.AVQueueItem = AVQueuePlayer(items: [self.A01Item!,self.B01Item!])\n                }else if  self.toSite == \"Network Room\"{\n                    self.AVQueueItem = AVQueuePlayer(items: [self.A01Item!,self.B01Item!,self.N01Item!])\n                }else if  self.toSite == \"Dan Room\"{\n                    self.AVQueueItem = AVQueuePlayer(items: [self.A01Item!,self.B01Item!,self.C01Item!,self.C02Item!])\n                }else if  self.toSite == \"Sector G3\"{\n                    self.AVQueueItem = AVQueuePlayer(items: [self.A01Item!,self.B01Item!,self.C01Item!,self.D01Item!])\n                }\n                self.playEvent(self.AVQueueItem)\n            }\n            })\n        \n        self.presentViewController(alert3, animated: true){}\n        \n\n    }\n    \n    @IBAction func ShowPathAction(sender: UIButton) {\n        \n        \n       // let movieUrl = NSURL(fileURLWithPath: videoSet[2])\n        \n        A1Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[0]))\n        A2Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[1]))\n        B1Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[2]))\n        B2Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[3]))\n        C1Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[4]))\n        C2Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[5]))\n        \n        AVQueueItem = AVQueuePlayer(items: [A1Item!,B1Item!,B2Item!,C1Item!,C2Item!,A2Item!])\n        playerView = AVQueueItem\n        playerViewController.player = playerView\n        self.presentViewController(playerViewController, animated: true) {\n            self.playerViewController.player?.play()\n        }\n        NSNotificationCenter.defaultCenter().addObserver(self, selector: #selector(ViewController.playerDidFinishPlaying(_:)), name: AVPlayerItemDidPlayToEndTimeNotification, object: self.playerView.items().last)\n        \n    }\n    \n//    \n//    @IBAction func PathOneAction(sender: UIButton) {\n//        A1Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[0]))\n//        A2Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[1]))\n//        B1Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[2]))\n//        B2Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[3]))\n//        C1Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[4]))\n//        C2Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[5]))\n//        \n//        print(PathOne.titleLabel?.text)\n//        if (PathOne.titleLabel?.text == \"Dan Room\") {\n//            print(\"Entered Loop\")\n//            AVQueueItem = AVQueuePlayer(items: [A1Item!,B1Item!])\n//            \n//        }else if (PathOne.titleLabel?.text == \"Sector G3\") {\n//            AVQueueItem = AVQueuePlayer(items: [B2Item!,C1Item!])\n//            \n//        }else if (PathOne.titleLabel?.text == \"Main Entrance\") {\n//            AVQueueItem = AVQueuePlayer(items: [C2Item!,A2Item!])\n//            \n//        }\n//         playerView = AVQueueItem\n//        playerViewController.player = playerView\n//        self.presentViewController(playerViewController, animated: true) {\n//            self.playerViewController.player?.play()\n//        }\n//        NSNotificationCenter.defaultCenter().addObserver(self, selector: #selector(ViewController.playerDidFinishPlaying(_:)), name: AVPlayerItemDidPlayToEndTimeNotification, object: self.playerView.items().last)\n//        \n//        \n//        \n//    }\n// \n//    \n//    @IBAction func PathTwoAction(sender: UIButton) {\n//        A1Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[0]))\n//        A2Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[1]))\n//        B1Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[2]))\n//        B2Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[3]))\n//        C1Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[4]))\n//        C2Item = AVPlayerItem(URL:NSURL(fileURLWithPath: videoSet[5]))\n//        toSite = (PathTwo.titleLabel?.text)!\n//        if (PathTwo.titleLabel?.text == \"Sector G3\") {\n//            AVQueueItem = AVQueuePlayer(items: [A1Item!,C1Item!])\n//       \n//        }else if (PathTwo.titleLabel?.text == \"Main Entrance\") {\n//            AVQueueItem = AVQueuePlayer(items: [B2Item!,A2Item!])\n//            \n//        }else if (PathTwo.titleLabel?.text == \"Dan Room\") {\n//            AVQueueItem = AVQueuePlayer(items: [C2Item!,B1Item!])\n//        }\n//        \n//        \n////        let alert3 = UIAlertController(title: \"Path Finish\", message:\"You just viewed the path from Sector G3 to Dan Room  \", preferredStyle: .Alert)\n////        alert3.addAction(UIAlertAction(title: \"OK\", style: .Default) { (UIAlertAction) -> Void in self})\n////        self.presentViewController(alert3, animated: true){}\n//        \n//        \n//        playerView = AVQueueItem\n//        playerViewController.player = playerView\n//        self.presentViewController(playerViewController, animated: true) {\n//            self.playerViewController.player?.play()\n//        }\n//        NSNotificationCenter.defaultCenter().addObserver(self, selector: #selector(ViewController.playerDidFinishPlaying(_:)), name: AVPlayerItemDidPlayToEndTimeNotification, object: self.playerView.items().last)\n//        \n//        \n//    }\n    \n    \n    \n    \n    \n    func playerDidFinishPlaying(note: NSNotification){\n        print(\"Video Finished\", terminator: \"",
 }
]
